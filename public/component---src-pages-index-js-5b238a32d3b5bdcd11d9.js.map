{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Header","_ref","siteTitle","react_default","a","createElement","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","children","query","render","data","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","header","_755544856","propTypes","PropTypes","node","isRequired","IndexPage","components_layout","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","Error","object","string","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-5b238a32d3b5bdcd11d9.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div\r\n    style={{\r\n      background: 'rebeccapurple',\r\n      marginBottom: '1.45rem',\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: '0 auto',\r\n        maxWidth: 960,\r\n        padding: '1.45rem 1.0875rem',\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: 'white',\r\n            textDecoration: 'none',\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: 'Sample' },\r\n            { name: 'keywords', content: 'sample, something' },\r\n          ]}\r\n        >\r\n          <html lang=\"en\" />\r\n        </Helmet>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div>\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\n\r\nimport Layout from '../components/layout'\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <table>\r\n      <table>Hi people</table>\r\n      <p>Welcome to your new Gatsby site.</p>\r\n      <p>Now go build something great.</p>\r\n      <div></div>\r\n    </table>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}